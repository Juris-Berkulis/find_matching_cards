(function(){"use strict";var __webpack_modules__={198:function(){eval('\n;// CONCATENATED MODULE: ./styles/style.scss\n// extracted by mini-css-extract-plugin\nvar animationBgWaves = "jss2";\nvar board = "jss7";\nvar btnShow = "jss20";\nvar card = "jss8";\nvar cardOpen = "jss9";\nvar cardsCountBtn = "jss5";\nvar cardsCountPanel = "jss4";\nvar controlPanel = "jss3";\nvar main = "jss1";\nvar startGameBtn = "jss6";\nvar theEnd = "jss10";\nvar theEndCross = "jss11";\nvar theEndCrossLine = "jss12";\nvar theEndCrossLine1 = "jss13";\nvar theEndCrossLine2 = "jss14";\nvar theEndModal = "jss15";\nvar theEndModalBtn = "jss18";\nvar theEndModalBtnWrapper = "jss17";\nvar theEndModalInstallAppBtn = "jss19";\nvar theEndModalInstallSign = "jss22";\nvar theEndModalParagraph = "jss16";\nvar theEndModalSign = "jss21";\n;// CONCATENATED MODULE: ./js/InitialHtml.js\nfunction _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\n\nvar _html = /*#__PURE__*/new WeakMap();\nvar InitialHtml = /*#__PURE__*/function () {\n  function InitialHtml() {\n    _classCallCheck(this, InitialHtml);\n    _classPrivateFieldInitSpec(this, _html, {\n      writable: true,\n      value: "\\n        <div class=\\"".concat(main, "\\">\\n        <div class=\\"").concat(controlPanel, "\\" id=\\"controlPanel\\">\\n            <div id=\\"cardsCountPanel\\" class=\\"").concat(cardsCountPanel, "\\">\\n                <button class=\\"").concat(cardsCountBtn, "\\">10</button>\\n                <button class=\\"").concat(cardsCountBtn, "\\">20</button>\\n                <button class=\\"").concat(cardsCountBtn, "\\">30</button>\\n                <button class=\\"").concat(cardsCountBtn, "\\">40</button>\\n            </div>\\n            <button class=\\"").concat(startGameBtn, "\\" id=\\"startGame\\">\\u041D\\u043E\\u0432\\u0430\\u044F \\u0438\\u0433\\u0440\\u0430</button>\\n            <button class=\\"").concat(startGameBtn, "\\" id=\\"rememberField\\">\\u0417\\u0430\\u043F\\u043E\\u043C\\u043D\\u0438\\u0442\\u044C</button>\\n            <p>\\n                <span>\\u041F\\u043E\\u043F\\u044B\\u0442\\u043A\\u0430: </span>\\n                <span id=\\"attemptNumber\\"></span>\\n            </p>\\n            <p>\\n                <span>\\u041E\\u0448\\u0438\\u0431\\u043A\\u0438: </span>\\n                <span id=\\"failCount\\"></span>\\n            </p>\\n            <p id=\\"elapsedTime\\"></p>\\n        </div>\\n        <div class=\\"").concat(board, "\\" id=\\"board\\"></div>\\n        <div class=\\"").concat(theEnd, "\\" id=\\"theEnd\\">\\n            <div class=\\"").concat(theEndCross, "\\">\\n                <div class=\\"").concat(theEndCrossLine, " ").concat(theEndCrossLine1, "\\"></div>\\n                <div class=\\"").concat(theEndCrossLine, " ").concat(theEndCrossLine2, "\\"></div>\\n            </div>\\n        </div>\\n        <div class=\\"").concat(theEndModal, "\\" id=\\"theEndModal\\">\\n            <p class=\\"").concat(theEndModalParagraph, "\\">\\u0412\\u044B \\u043F\\u043E\\u0431\\u0435\\u0434\\u0438\\u043B\\u0438!</p>\\n            <p class=\\"").concat(theEndModalParagraph, "\\" id=\\"theEndModalAttemptNumber\\"></p>\\n            <p class=\\"").concat(theEndModalParagraph, "\\" id=\\"theEndModalFailCount\\"></p>\\n            <p class=\\"").concat(theEndModalParagraph, "\\" id=\\"theEndModalElapsedTime\\"></p>\\n            <div class=\\"").concat(theEndModalBtnWrapper, "\\" id=\\"theEndModalBtnWrapper\\">\\n                <button class=\\"").concat(theEndModalInstallAppBtn, " ").concat(theEndModalBtn, "\\" id=\\"theEndModalInstallAppBtn\\" title=\\"\\u0423\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u043F\\u0440\\u0438\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0435\\">\\n                    <span class=\\"").concat(theEndModalInstallSign, " ").concat(theEndModalSign, "\\">&#11015;</span>\\n                </button>\\n                <button class=\\"").concat(theEndModalBtn, "\\" id=\\"theEndModalCloseBtn\\">\\n                    <span class=\\"").concat(theEndModalSign, "\\">Ok</span>\\n                </button>\\n            </div>\\n        </div>\\n        </div>\\n    ")\n    });\n    this.insertHtmlInApp();\n  }\n  _createClass(InitialHtml, [{\n    key: "insertHtmlInApp",\n    value: function insertHtmlInApp() {\n      var app = document.getElementById(\'app\');\n      app.innerHTML = _classPrivateFieldGet(this, _html);\n    }\n  }]);\n  return InitialHtml;\n}();\n\n;\n;// CONCATENATED MODULE: ./js/Card.js\nfunction Card_typeof(obj) { "@babel/helpers - typeof"; return Card_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, Card_typeof(obj); }\nfunction Card_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Card_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, Card_toPropertyKey(descriptor.key), descriptor); } }\nfunction Card_createClass(Constructor, protoProps, staticProps) { if (protoProps) Card_defineProperties(Constructor.prototype, protoProps); if (staticProps) Card_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction Card_toPropertyKey(arg) { var key = Card_toPrimitive(arg, "string"); return Card_typeof(key) === "symbol" ? key : String(key); }\nfunction Card_toPrimitive(input, hint) { if (Card_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (Card_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nfunction Card_classPrivateFieldInitSpec(obj, privateMap, value) { Card_checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction Card_checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }\nfunction Card_classPrivateFieldGet(receiver, privateMap) { var descriptor = Card_classExtractFieldDescriptor(receiver, privateMap, "get"); return Card_classApplyDescriptorGet(receiver, descriptor); }\nfunction Card_classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = Card_classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction Card_classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }\n\nvar _bgColor = /*#__PURE__*/new WeakMap();\nvar _domElement = /*#__PURE__*/new WeakMap();\nvar _isShowCard = /*#__PURE__*/new WeakMap();\nvar Card = /*#__PURE__*/function () {\n  function Card(bgColor) {\n    Card_classCallCheck(this, Card);\n    Card_classPrivateFieldInitSpec(this, _bgColor, {\n      writable: true,\n      value: void 0\n    });\n    Card_classPrivateFieldInitSpec(this, _domElement, {\n      writable: true,\n      value: void 0\n    });\n    Card_classPrivateFieldInitSpec(this, _isShowCard, {\n      writable: true,\n      value: false\n    });\n    _classPrivateFieldSet(this, _bgColor, bgColor);\n    _classPrivateFieldSet(this, _domElement, document.createElement(\'div\'));\n    Card_classPrivateFieldGet(this, _domElement).classList.add("".concat(card));\n    Card_classPrivateFieldGet(this, _domElement).style.backgroundColor = "".concat(this.getReverseSideOfTheCard);\n    Card_classPrivateFieldGet(this, _domElement).connectedCard = this;\n  }\n  Card_createClass(Card, [{\n    key: "getReverseSideOfTheCard",\n    get: function get() {\n      return \'#555555\';\n    }\n  }, {\n    key: "getFrontSideOfTheCard",\n    get: function get() {\n      return Card_classPrivateFieldGet(this, _bgColor);\n    }\n  }, {\n    key: "getDomElement",\n    get: function get() {\n      return Card_classPrivateFieldGet(this, _domElement);\n    }\n  }, {\n    key: "flipCard",\n    value: function flipCard() {\n      _classPrivateFieldSet(this, _isShowCard, !Card_classPrivateFieldGet(this, _isShowCard));\n      if (Card_classPrivateFieldGet(this, _isShowCard)) {\n        Card_classPrivateFieldGet(this, _domElement).style.backgroundColor = this.getFrontSideOfTheCard;\n        Card_classPrivateFieldGet(this, _domElement).classList.add("".concat(cardOpen));\n      } else {\n        Card_classPrivateFieldGet(this, _domElement).style.backgroundColor = this.getReverseSideOfTheCard;\n        Card_classPrivateFieldGet(this, _domElement).classList.remove("".concat(cardOpen));\n      }\n    }\n  }, {\n    key: "disconnectedFromDOM",\n    value: function disconnectedFromDOM() {\n      Card_classPrivateFieldGet(this, _domElement).connectedCard = null;\n    }\n  }]);\n  return Card;\n}();\n\n;\n;// CONCATENATED MODULE: ./js/Desk.js\nfunction Desk_typeof(obj) { "@babel/helpers - typeof"; return Desk_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, Desk_typeof(obj); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction Desk_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Desk_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, Desk_toPropertyKey(descriptor.key), descriptor); } }\nfunction Desk_createClass(Constructor, protoProps, staticProps) { if (protoProps) Desk_defineProperties(Constructor.prototype, protoProps); if (staticProps) Desk_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction Desk_toPropertyKey(arg) { var key = Desk_toPrimitive(arg, "string"); return Desk_typeof(key) === "symbol" ? key : String(key); }\nfunction Desk_toPrimitive(input, hint) { if (Desk_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (Desk_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nfunction Desk_classPrivateFieldInitSpec(obj, privateMap, value) { Desk_checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction Desk_checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }\nfunction Desk_classPrivateFieldGet(receiver, privateMap) { var descriptor = Desk_classExtractFieldDescriptor(receiver, privateMap, "get"); return Desk_classApplyDescriptorGet(receiver, descriptor); }\nfunction Desk_classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nfunction Desk_classPrivateFieldSet(receiver, privateMap, value) { var descriptor = Desk_classExtractFieldDescriptor(receiver, privateMap, "set"); Desk_classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction Desk_classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }\nfunction Desk_classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }\n\nvar _cardsCount = /*#__PURE__*/new WeakMap();\nvar _frontSidesOfTheCards = /*#__PURE__*/new WeakMap();\nvar Desc = /*#__PURE__*/function () {\n  //* Вариант 1:\n  // constructor () {\n  //     this.cards = [];\n  //     this.#frontSidesOfTheCards.forEach((frontSideOfTheCard) => {\n  //         this.cards.push(new Card(frontSideOfTheCard));\n  //         this.cards.push(new Card(frontSideOfTheCard));\n  //     });\n  // };\n\n  //* Вариант 2:\n  function Desc(cardsCount) {\n    Desk_classCallCheck(this, Desc);\n    Desk_classPrivateFieldInitSpec(this, _cardsCount, {\n      writable: true,\n      value: void 0\n    });\n    Desk_classPrivateFieldInitSpec(this, _frontSidesOfTheCards, {\n      writable: true,\n      value: [\'red\', \'yellow\', \'green\', \'cyan\', \'blue\', \'orange\', \'blueviolet\', \'azure\', \'brown\', \'pink\', \'lime\', \'deeppink\', \'burlywood\', \'olive\', \'saddlebrown\', \'midnightblue\', \'palegreen\']\n    });\n    this.buildListWithFrontSidesOfTheCards();\n    Desk_classPrivateFieldSet(this, _cardsCount, cardsCount);\n    Desk_classPrivateFieldGet(this, _frontSidesOfTheCards).length = Desk_classPrivateFieldGet(this, _cardsCount) / 2;\n    this.cards = [].concat(_toConsumableArray(Desk_classPrivateFieldGet(this, _frontSidesOfTheCards)), _toConsumableArray(Desk_classPrivateFieldGet(this, _frontSidesOfTheCards))).map(function (card) {\n      return new Card(card);\n    });\n  }\n  Desk_createClass(Desc, [{\n    key: "buildListWithFrontSidesOfTheCards",\n    value: function buildListWithFrontSidesOfTheCards() {\n      for (var i = 0; i < 3; i++) {\n        var red = (Math.random() * 255).toFixed(0);\n        var green = (Math.random() * 255).toFixed(0);\n        var blue = (Math.random() * 255).toFixed(0);\n        Desk_classPrivateFieldGet(this, _frontSidesOfTheCards).push("rgb(".concat(red, ", ").concat(green, ", ").concat(blue, ")"));\n      }\n    }\n  }, {\n    key: "shuffleCards",\n    value: function shuffleCards() {\n      this.cards.sort(function () {\n        return Math.random() - 0.5;\n      });\n    }\n  }, {\n    key: "removeCard",\n    value: function removeCard(card) {\n      var indexCard = this.cards.findIndex(function (item) {\n        return item.getFrontSideOfTheCard === card.getFrontSideOfTheCard;\n      });\n      if (indexCard !== -1) {\n        this.cards.splice(indexCard, 1);\n        card.disconnectedFromDOM();\n      }\n    }\n  }]);\n  return Desc;\n}();\n\n;\n;// CONCATENATED MODULE: ./js/TheEndModal.js\nfunction TheEndModal_typeof(obj) { "@babel/helpers - typeof"; return TheEndModal_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, TheEndModal_typeof(obj); }\nfunction TheEndModal_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction TheEndModal_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, TheEndModal_toPropertyKey(descriptor.key), descriptor); } }\nfunction TheEndModal_createClass(Constructor, protoProps, staticProps) { if (protoProps) TheEndModal_defineProperties(Constructor.prototype, protoProps); if (staticProps) TheEndModal_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction TheEndModal_toPropertyKey(arg) { var key = TheEndModal_toPrimitive(arg, "string"); return TheEndModal_typeof(key) === "symbol" ? key : String(key); }\nfunction TheEndModal_toPrimitive(input, hint) { if (TheEndModal_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (TheEndModal_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nfunction TheEndModal_classPrivateFieldInitSpec(obj, privateMap, value) { TheEndModal_checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction TheEndModal_checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }\nfunction TheEndModal_classPrivateFieldGet(receiver, privateMap) { var descriptor = TheEndModal_classExtractFieldDescriptor(receiver, privateMap, "get"); return TheEndModal_classApplyDescriptorGet(receiver, descriptor); }\nfunction TheEndModal_classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nfunction TheEndModal_classPrivateFieldSet(receiver, privateMap, value) { var descriptor = TheEndModal_classExtractFieldDescriptor(receiver, privateMap, "set"); TheEndModal_classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction TheEndModal_classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }\nfunction TheEndModal_classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }\nvar _attemptNumber = /*#__PURE__*/new WeakMap();\nvar _failCount = /*#__PURE__*/new WeakMap();\nvar _elapsedTime = /*#__PURE__*/new WeakMap();\nvar _theEndElement = /*#__PURE__*/new WeakMap();\nvar _theEndModalElement = /*#__PURE__*/new WeakMap();\nvar _theEndModalAttemptNumberElement = /*#__PURE__*/new WeakMap();\nvar _theEndModalFailCountElement = /*#__PURE__*/new WeakMap();\nvar _theEndModalElapsedTimeElement = /*#__PURE__*/new WeakMap();\nvar _theEndModalCloseBtnElement = /*#__PURE__*/new WeakMap();\nvar _theEndModalInstallAppBtnElement = /*#__PURE__*/new WeakMap();\nvar TheEndModal = /*#__PURE__*/function () {\n  function TheEndModal(attemptNumber, failCount, elapsedTime) {\n    var _this = this;\n    TheEndModal_classCallCheck(this, TheEndModal);\n    TheEndModal_classPrivateFieldInitSpec(this, _attemptNumber, {\n      writable: true,\n      value: void 0\n    });\n    TheEndModal_classPrivateFieldInitSpec(this, _failCount, {\n      writable: true,\n      value: void 0\n    });\n    TheEndModal_classPrivateFieldInitSpec(this, _elapsedTime, {\n      writable: true,\n      value: void 0\n    });\n    TheEndModal_classPrivateFieldInitSpec(this, _theEndElement, {\n      writable: true,\n      value: document.getElementById(\'theEnd\')\n    });\n    TheEndModal_classPrivateFieldInitSpec(this, _theEndModalElement, {\n      writable: true,\n      value: document.getElementById(\'theEndModal\')\n    });\n    TheEndModal_classPrivateFieldInitSpec(this, _theEndModalAttemptNumberElement, {\n      writable: true,\n      value: document.getElementById(\'theEndModalAttemptNumber\')\n    });\n    TheEndModal_classPrivateFieldInitSpec(this, _theEndModalFailCountElement, {\n      writable: true,\n      value: document.getElementById(\'theEndModalFailCount\')\n    });\n    TheEndModal_classPrivateFieldInitSpec(this, _theEndModalElapsedTimeElement, {\n      writable: true,\n      value: document.getElementById(\'theEndModalElapsedTime\')\n    });\n    TheEndModal_classPrivateFieldInitSpec(this, _theEndModalCloseBtnElement, {\n      writable: true,\n      value: document.getElementById(\'theEndModalCloseBtn\')\n    });\n    TheEndModal_classPrivateFieldInitSpec(this, _theEndModalInstallAppBtnElement, {\n      writable: true,\n      value: document.getElementById(\'theEndModalInstallAppBtn\')\n    });\n    TheEndModal_classPrivateFieldSet(this, _attemptNumber, attemptNumber);\n    TheEndModal_classPrivateFieldSet(this, _failCount, failCount);\n    TheEndModal_classPrivateFieldSet(this, _elapsedTime, elapsedTime);\n    this.openTheEndModal();\n    TheEndModal_classPrivateFieldGet(this, _theEndElement).onclick = function () {\n      return _this.closeTheEndModal(_this);\n    };\n    TheEndModal_classPrivateFieldGet(this, _theEndModalCloseBtnElement).onclick = function () {\n      return _this.closeTheEndModal(_this);\n    };\n    TheEndModal_classPrivateFieldGet(this, _theEndModalCloseBtnElement).onmouseover = function () {\n      return _this.changeBGColorForModalBtn(TheEndModal_classPrivateFieldGet(_this, _theEndModalCloseBtnElement));\n    };\n    TheEndModal_classPrivateFieldGet(this, _theEndModalInstallAppBtnElement).onmouseover = function () {\n      return _this.changeBGColorForModalBtn(TheEndModal_classPrivateFieldGet(_this, _theEndModalInstallAppBtnElement));\n    };\n  }\n  TheEndModal_createClass(TheEndModal, [{\n    key: "changeBGColorForModalBtn",\n    value: function changeBGColorForModalBtn(element) {\n      var red = (Math.random() * 255).toFixed(0);\n      var green = (Math.random() * 255).toFixed(0);\n      var blue = (Math.random() * 255).toFixed(0);\n      element.style.backgroundColor = "rgb(".concat(red, ", ").concat(green, ", ").concat(blue, ")");\n      element.style.color = "rgb(".concat(255 - red, ", ").concat(255 - green, ", ").concat(255 - blue, ")");\n    }\n  }, {\n    key: "openTheEndModal",\n    value: function openTheEndModal() {\n      TheEndModal_classPrivateFieldGet(this, _theEndElement).style.display = \'block\';\n      TheEndModal_classPrivateFieldGet(this, _theEndModalElement).style.display = \'block\';\n      TheEndModal_classPrivateFieldGet(this, _theEndModalAttemptNumberElement).innerHTML = "\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u0445\\u043E\\u0434\\u043E\\u0432: ".concat(TheEndModal_classPrivateFieldGet(this, _attemptNumber));\n      TheEndModal_classPrivateFieldGet(this, _theEndModalFailCountElement).innerHTML = "\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043E\\u0448\\u0438\\u0431\\u043E\\u043A: ".concat(TheEndModal_classPrivateFieldGet(this, _failCount));\n      TheEndModal_classPrivateFieldGet(this, _theEndModalElapsedTimeElement).innerHTML = "\\u0417\\u0430\\u0442\\u0440\\u0430\\u0447\\u0435\\u043D\\u043D\\u043E\\u0435 \\u0432\\u0440\\u0435\\u043C\\u044F: ".concat(TheEndModal_classPrivateFieldGet(this, _elapsedTime));\n    }\n  }, {\n    key: "closeTheEndModal",\n    value: function closeTheEndModal() {\n      TheEndModal_classPrivateFieldGet(this, _theEndElement).style.display = \'none\';\n      TheEndModal_classPrivateFieldGet(this, _theEndModalElement).style.display = \'none\';\n      TheEndModal_classPrivateFieldGet(this, _theEndModalAttemptNumberElement).innerHTML = \'\';\n      TheEndModal_classPrivateFieldGet(this, _theEndModalFailCountElement).innerHTML = \'\';\n      TheEndModal_classPrivateFieldGet(this, _theEndModalElapsedTimeElement).innerHTML = \'\';\n    }\n  }]);\n  return TheEndModal;\n}();\n\n;\n;// CONCATENATED MODULE: ./js/GameManager.js\nfunction GameManager_typeof(obj) { "@babel/helpers - typeof"; return GameManager_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, GameManager_typeof(obj); }\nfunction GameManager_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction GameManager_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, GameManager_toPropertyKey(descriptor.key), descriptor); } }\nfunction GameManager_createClass(Constructor, protoProps, staticProps) { if (protoProps) GameManager_defineProperties(Constructor.prototype, protoProps); if (staticProps) GameManager_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction GameManager_toPropertyKey(arg) { var key = GameManager_toPrimitive(arg, "string"); return GameManager_typeof(key) === "symbol" ? key : String(key); }\nfunction GameManager_toPrimitive(input, hint) { if (GameManager_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (GameManager_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nfunction GameManager_classPrivateFieldInitSpec(obj, privateMap, value) { GameManager_checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction GameManager_checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }\nfunction GameManager_classPrivateFieldGet(receiver, privateMap) { var descriptor = GameManager_classExtractFieldDescriptor(receiver, privateMap, "get"); return GameManager_classApplyDescriptorGet(receiver, descriptor); }\nfunction GameManager_classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nfunction GameManager_classPrivateFieldSet(receiver, privateMap, value) { var descriptor = GameManager_classExtractFieldDescriptor(receiver, privateMap, "set"); GameManager_classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction GameManager_classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }\nfunction GameManager_classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }\n\n\n\nvar _boardElement = /*#__PURE__*/new WeakMap();\nvar _scoreElement = /*#__PURE__*/new WeakMap();\nvar _failElement = /*#__PURE__*/new WeakMap();\nvar _desc = /*#__PURE__*/new WeakMap();\nvar _firstSelectedCard = /*#__PURE__*/new WeakMap();\nvar _secondSelectedCard = /*#__PURE__*/new WeakMap();\nvar GameManager_attemptNumber = /*#__PURE__*/new WeakMap();\nvar GameManager_failCount = /*#__PURE__*/new WeakMap();\nvar GameManager_cardsCount = /*#__PURE__*/new WeakMap();\nvar _cardsCountBtnsPanel = /*#__PURE__*/new WeakMap();\nvar _elapsedTimeElement = /*#__PURE__*/new WeakMap();\nvar GameManager_elapsedTime = /*#__PURE__*/new WeakMap();\nvar _startTimerBoolean = /*#__PURE__*/new WeakMap();\nvar _intervalIdForElapsedTime = /*#__PURE__*/new WeakMap();\nvar GameManager = /*#__PURE__*/function () {\n  function GameManager(board, score, fail) {\n    GameManager_classCallCheck(this, GameManager);\n    GameManager_classPrivateFieldInitSpec(this, _boardElement, {\n      writable: true,\n      value: void 0\n    });\n    GameManager_classPrivateFieldInitSpec(this, _scoreElement, {\n      writable: true,\n      value: void 0\n    });\n    GameManager_classPrivateFieldInitSpec(this, _failElement, {\n      writable: true,\n      value: void 0\n    });\n    GameManager_classPrivateFieldInitSpec(this, _desc, {\n      writable: true,\n      value: void 0\n    });\n    GameManager_classPrivateFieldInitSpec(this, _firstSelectedCard, {\n      writable: true,\n      value: null\n    });\n    GameManager_classPrivateFieldInitSpec(this, _secondSelectedCard, {\n      writable: true,\n      value: null\n    });\n    GameManager_classPrivateFieldInitSpec(this, GameManager_attemptNumber, {\n      writable: true,\n      value: 0\n    });\n    GameManager_classPrivateFieldInitSpec(this, GameManager_failCount, {\n      writable: true,\n      value: 0\n    });\n    GameManager_classPrivateFieldInitSpec(this, GameManager_cardsCount, {\n      writable: true,\n      value: 20\n    });\n    GameManager_classPrivateFieldInitSpec(this, _cardsCountBtnsPanel, {\n      writable: true,\n      value: document.getElementById(\'cardsCountPanel\')\n    });\n    GameManager_classPrivateFieldInitSpec(this, _elapsedTimeElement, {\n      writable: true,\n      value: document.getElementById(\'elapsedTime\')\n    });\n    GameManager_classPrivateFieldInitSpec(this, GameManager_elapsedTime, {\n      writable: true,\n      value: 0\n    });\n    GameManager_classPrivateFieldInitSpec(this, _startTimerBoolean, {\n      writable: true,\n      value: false\n    });\n    GameManager_classPrivateFieldInitSpec(this, _intervalIdForElapsedTime, {\n      writable: true,\n      value: void 0\n    });\n    GameManager_classPrivateFieldSet(this, _boardElement, board);\n    GameManager_classPrivateFieldSet(this, _scoreElement, score);\n    GameManager_classPrivateFieldSet(this, _failElement, fail);\n    this.findCardsCount();\n    this.activeCardsCountBtnsPanel();\n  }\n  GameManager_createClass(GameManager, [{\n    key: "attemptNumber",\n    get: function get() {\n      return GameManager_classPrivateFieldGet(this, GameManager_attemptNumber);\n    },\n    set: function set(value) {\n      GameManager_classPrivateFieldSet(this, GameManager_attemptNumber, value);\n      GameManager_classPrivateFieldGet(this, _scoreElement).innerHTML = value;\n    }\n  }, {\n    key: "failCount",\n    get: function get() {\n      return GameManager_classPrivateFieldGet(this, GameManager_failCount);\n    },\n    set: function set(value) {\n      GameManager_classPrivateFieldSet(this, GameManager_failCount, value);\n      GameManager_classPrivateFieldGet(this, _failElement).innerHTML = value;\n    }\n  }, {\n    key: "cardsCount",\n    set: function set(value) {\n      return GameManager_classPrivateFieldSet(this, GameManager_cardsCount, value);\n    }\n  }, {\n    key: "shuffleAndDeal",\n    value: function shuffleAndDeal() {\n      var _this = this;\n      GameManager_classPrivateFieldGet(this, _desc).shuffleCards();\n      GameManager_classPrivateFieldGet(this, _desc).cards.forEach(function (card) {\n        if (GameManager_classPrivateFieldGet(_this, _boardElement).append) {\n          GameManager_classPrivateFieldGet(_this, _boardElement).append(card.getDomElement);\n        } else {\n          GameManager_classPrivateFieldGet(_this, _boardElement).appendChild(card.getDomElement);\n        }\n      });\n    }\n  }, {\n    key: "formatElapsedTime",\n    value: function formatElapsedTime(time) {\n      return "".concat((time - time % 3600) / 3600 ? "".concat((time - time % 3600) / 3600, ":") : \'\').concat((time - time % 60 - (time - time % 3600)) / 60 >= 10 ? (time - time % 60 - (time - time % 3600)) / 60 : "0".concat((time - time % 60 - (time - time % 3600)) / 60), ":").concat(time % 60 >= 10 ? time % 60 : "0".concat(time % 60));\n    }\n  }, {\n    key: "resetTimer",\n    value: function resetTimer() {\n      clearInterval(GameManager_classPrivateFieldGet(this, _intervalIdForElapsedTime));\n      GameManager_classPrivateFieldSet(this, _startTimerBoolean, false);\n      GameManager_classPrivateFieldSet(this, GameManager_elapsedTime, 0);\n      GameManager_classPrivateFieldGet(this, _elapsedTimeElement).innerHTML = this.formatElapsedTime(GameManager_classPrivateFieldGet(this, GameManager_elapsedTime));\n    }\n  }, {\n    key: "startGame",\n    value: function startGame() {\n      this.resetTimer();\n      this.attemptNumber = 0;\n      this.failCount = 0;\n      GameManager_classPrivateFieldSet(this, _firstSelectedCard, null);\n      GameManager_classPrivateFieldSet(this, _secondSelectedCard, null);\n      GameManager_classPrivateFieldSet(this, _desc, new Desc(GameManager_classPrivateFieldGet(this, GameManager_cardsCount)));\n      GameManager_classPrivateFieldGet(this, _boardElement).innerHTML = \'\';\n      this.shuffleAndDeal();\n    }\n  }, {\n    key: "startElapsedTime",\n    value: function startElapsedTime() {\n      var _this2 = this;\n      GameManager_classPrivateFieldSet(this, _intervalIdForElapsedTime, setInterval(function () {\n        var _this$elapsedTime, _this$elapsedTime2;\n        GameManager_classPrivateFieldSet(_this2, GameManager_elapsedTime, (_this$elapsedTime = GameManager_classPrivateFieldGet(_this2, GameManager_elapsedTime), _this$elapsedTime2 = _this$elapsedTime++, _this$elapsedTime)), _this$elapsedTime2;\n        GameManager_classPrivateFieldGet(_this2, _elapsedTimeElement).innerHTML = _this2.formatElapsedTime(GameManager_classPrivateFieldGet(_this2, GameManager_elapsedTime));\n      }, 1000));\n    }\n  }, {\n    key: "selectCard",\n    value: function selectCard(card) {\n      var _this3 = this;\n      if (!GameManager_classPrivateFieldGet(this, _startTimerBoolean)) {\n        this.startElapsedTime();\n        GameManager_classPrivateFieldSet(this, _startTimerBoolean, true);\n      }\n      if (card === GameManager_classPrivateFieldGet(this, _firstSelectedCard)) {\n        return;\n      }\n      card.flipCard();\n      if (GameManager_classPrivateFieldGet(this, _firstSelectedCard) && GameManager_classPrivateFieldGet(this, _secondSelectedCard)) {\n        GameManager_classPrivateFieldGet(this, _firstSelectedCard).flipCard();\n        GameManager_classPrivateFieldGet(this, _secondSelectedCard).flipCard();\n        GameManager_classPrivateFieldSet(this, _firstSelectedCard, null);\n        GameManager_classPrivateFieldSet(this, _secondSelectedCard, null);\n      }\n      if (GameManager_classPrivateFieldGet(this, _firstSelectedCard) === null) {\n        this.attemptNumber++;\n        GameManager_classPrivateFieldSet(this, _firstSelectedCard, card);\n      } else if (GameManager_classPrivateFieldGet(this, _secondSelectedCard) === null) {\n        GameManager_classPrivateFieldSet(this, _secondSelectedCard, card);\n        if (GameManager_classPrivateFieldGet(this, _firstSelectedCard).getFrontSideOfTheCard === card.getFrontSideOfTheCard) {\n          GameManager_classPrivateFieldGet(this, _desc).removeCard(GameManager_classPrivateFieldGet(this, _firstSelectedCard));\n          GameManager_classPrivateFieldGet(this, _desc).removeCard(GameManager_classPrivateFieldGet(this, _secondSelectedCard));\n          GameManager_classPrivateFieldSet(this, _firstSelectedCard, null);\n          GameManager_classPrivateFieldSet(this, _secondSelectedCard, null);\n        } else {\n          this.failCount++;\n        }\n      }\n      if (!GameManager_classPrivateFieldGet(this, _desc).cards.length) {\n        clearInterval(GameManager_classPrivateFieldGet(this, _intervalIdForElapsedTime));\n        var timerId = setTimeout(function () {\n          new TheEndModal(_this3.attemptNumber, _this3.failCount, _this3.formatElapsedTime(GameManager_classPrivateFieldGet(_this3, GameManager_elapsedTime)));\n          clearTimeout(timerId);\n        }, 1000);\n      }\n    }\n  }, {\n    key: "findCardsCount",\n    value: function findCardsCount() {\n      if (GameManager_classPrivateFieldGet(this, _cardsCountBtnsPanel).children) {\n        for (var i = 0; i < GameManager_classPrivateFieldGet(this, _cardsCountBtnsPanel).children.length; i++) {\n          if (+GameManager_classPrivateFieldGet(this, _cardsCountBtnsPanel).children[i].textContent === +GameManager_classPrivateFieldGet(this, GameManager_cardsCount)) {\n            GameManager_classPrivateFieldGet(this, _cardsCountBtnsPanel).children[i].disabled = \'true\';\n          } else {\n            GameManager_classPrivateFieldGet(this, _cardsCountBtnsPanel).children[i].removeAttribute(\'disabled\');\n          }\n        }\n      }\n    }\n  }, {\n    key: "selectCardsCount",\n    value: function selectCardsCount(event) {\n      if (event.target.classList.contains("".concat(cardsCountBtn))) {\n        this.cardsCount = +event.target.textContent;\n      }\n      this.findCardsCount();\n    }\n  }, {\n    key: "activeCardsCountBtnsPanel",\n    value: function activeCardsCountBtnsPanel() {\n      var _this4 = this;\n      GameManager_classPrivateFieldGet(this, _cardsCountBtnsPanel).addEventListener(\'click\', function (event) {\n        return _this4.selectCardsCount(event);\n      });\n    }\n  }]);\n  return GameManager;\n}();\n\n;\n;// CONCATENATED MODULE: ./ServiceWorker/serviceWorkerRegistration.js\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\nvar isLocalhost = Boolean(window.location.hostname === \'localhost\' ||\n// [::1] is the IPv6 localhost address.\nwindow.location.hostname === \'[::1]\' ||\n// 127.0.0.0/8 are considered localhost for IPv4.\nwindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\nfunction register(config) {\n  if ( true && \'serviceWorker\' in navigator) {\n    window.addEventListener(\'load\', function () {\n      var swUrl = "/service-worker.js";\n      if (isLocalhost) {\n        // This is running on localhost. Let\'s check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(function () {\n          console.log(\'This web app is being served cache-first by a service worker.\');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  } else {\n    unregister();\n  }\n}\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker.register(swUrl).then(function (registration) {\n    registration.onupdatefound = function () {\n      var installingWorker = registration.installing;\n      if (installingWorker == null) {\n        return;\n      }\n      installingWorker.onstatechange = function () {\n        if (installingWorker.state === \'installed\') {\n          if (navigator.serviceWorker.controller) {\n            // At this point, the updated precached content has been fetched,\n            // but the previous service worker will still serve the older\n            // content until all client tabs are closed.\n            console.log(\'New content is available and will be used when all tabs for this page are closed.\');\n\n            // Execute callback\n            if (config && config.onUpdate) {\n              config.onUpdate(registration);\n            }\n          } else {\n            // At this point, everything has been precached.\n            // It\'s the perfect time to display a\n            // "Content is cached for offline use." message.\n            console.log(\'Content is cached for offline use.\');\n\n            // Execute callback\n            if (config && config.onSuccess) {\n              config.onSuccess(registration);\n            }\n          }\n        }\n      };\n    };\n  })["catch"](function (error) {\n    console.error(\'Error during service worker registration:\', error);\n  });\n}\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can\'t reload the page.\n  fetch(swUrl, {\n    headers: {\n      \'Service-Worker\': \'script\'\n    }\n  }).then(function (response) {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    var contentType = response.headers.get(\'content-type\');\n    if (response.status === 404 || contentType != null && contentType.indexOf(\'javascript\') === -1) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then(function (registration) {\n        registration.unregister().then(function () {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })["catch"](function () {\n    console.log(\'No internet connection found. App is running in offline mode.\');\n  });\n}\nfunction unregister() {\n  if (\'serviceWorker\' in navigator) {\n    navigator.serviceWorker.ready.then(function (registration) {\n      registration.unregister();\n      console.log(\'Service worker disabled\');\n    })["catch"](function (error) {\n      console.error(error.message);\n    });\n  } else {\n    console.log(\'This browser does not have a service worker\');\n  }\n}\n;// CONCATENATED MODULE: ./ServiceWorker/pwaInstall.js\nfunction pwaInstall_typeof(obj) { "@babel/helpers - typeof"; return pwaInstall_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, pwaInstall_typeof(obj); }\nfunction _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == pwaInstall_typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a \'" + methodName + "\' method")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, "catch": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }\n\nvar pwaStatus = function pwaStatus() {\n  //* Подробнее на сайте: "https://web.dev/i18n/ru/customize-install/".\n  // Initialize deferredPrompt for use later to show browser install prompt.\n  var deferredPrompt;\n  var theEndModalInstallAppBtnElement = document.getElementById(\'theEndModalInstallAppBtn\');\n  var theEndModalBtnWrapperElement = document.getElementById(\'theEndModalBtnWrapper\');\n  var showInstallPromotion = function showInstallPromotion() {\n    theEndModalInstallAppBtnElement.classList.add("".concat(btnShow));\n    theEndModalBtnWrapperElement.style.justifyContent = \'space-between\';\n  };\n  var hideInstallPromotion = function hideInstallPromotion() {\n    theEndModalInstallAppBtnElement.classList.remove("".concat(btnShow));\n    theEndModalBtnWrapperElement.style.justifyContent = \'flex-end\';\n  };\n  var onClickForBtn = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var _yield$deferredPrompt, outcome;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            // Hide the app provided install promotion\n            hideInstallPromotion();\n            // Show the install prompt\n            deferredPrompt.prompt();\n            // Wait for the user to respond to the prompt\n            _context.next = 4;\n            return deferredPrompt.userChoice;\n          case 4:\n            _yield$deferredPrompt = _context.sent;\n            outcome = _yield$deferredPrompt.outcome;\n            // Optionally, send analytics event with outcome of user choice\n            console.log("User response to the install prompt: ".concat(outcome));\n            // We\'ve used the prompt, and can\'t use it again, throw it away\n            deferredPrompt = null;\n          case 8:\n          case "end":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function onClickForBtn() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var installApp = function installApp() {\n    theEndModalInstallAppBtnElement.onclick = function () {\n      return onClickForBtn();\n    };\n  };\n  var onApiInstalledForWindows = function onApiInstalledForWindows() {\n    return function () {\n      // Hide the app-provided install promotion\n      hideInstallPromotion();\n      // Clear the deferredPrompt so it can be garbage collected\n      deferredPrompt = null;\n      // Optionally, send analytics event to indicate successful install\n      console.log(\'The application has been successfully installed.\');\n    };\n  };\n  var appInstalled = function appInstalled() {\n    window.addEventListener(\'appinstalled\', onApiInstalledForWindows());\n  };\n  var onBeforeInstallPromptForWindows = function onBeforeInstallPromptForWindows() {\n    return function (e) {\n      // Prevent the mini-infobar from appearing on mobile\n      e.preventDefault();\n      // Stash the event so it can be triggered later.\n      deferredPrompt = e;\n      // Update UI notify the user they can install the PWA\n      showInstallPromotion();\n      // Optionally, send analytics event that PWA install promo was shown.\n      console.log(\'This application can be installed on the home screen.\');\n    };\n  };\n  var lissenBeforeInstallPrompt = function lissenBeforeInstallPrompt() {\n    window.addEventListener(\'beforeinstallprompt\', onBeforeInstallPromptForWindows());\n  };\n  lissenBeforeInstallPrompt();\n  installApp();\n  appInstalled();\n};\n;// CONCATENATED MODULE: ./analytics/GoogleAnalitics.js\nfunction GoogleAnalitics_typeof(obj) { "@babel/helpers - typeof"; return GoogleAnalitics_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, GoogleAnalitics_typeof(obj); }\nfunction GoogleAnalitics_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction GoogleAnalitics_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, GoogleAnalitics_toPropertyKey(descriptor.key), descriptor); } }\nfunction GoogleAnalitics_createClass(Constructor, protoProps, staticProps) { if (protoProps) GoogleAnalitics_defineProperties(Constructor.prototype, protoProps); if (staticProps) GoogleAnalitics_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction GoogleAnalitics_toPropertyKey(arg) { var key = GoogleAnalitics_toPrimitive(arg, "string"); return GoogleAnalitics_typeof(key) === "symbol" ? key : String(key); }\nfunction GoogleAnalitics_toPrimitive(input, hint) { if (GoogleAnalitics_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (GoogleAnalitics_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }\nfunction GoogleAnalitics_classPrivateFieldInitSpec(obj, privateMap, value) { GoogleAnalitics_checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction GoogleAnalitics_checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }\nfunction GoogleAnalitics_classPrivateFieldGet(receiver, privateMap) { var descriptor = GoogleAnalitics_classExtractFieldDescriptor(receiver, privateMap, "get"); return GoogleAnalitics_classApplyDescriptorGet(receiver, descriptor); }\nfunction GoogleAnalitics_classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }\nfunction GoogleAnalitics_classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nvar _hostings = /*#__PURE__*/new WeakMap();\nvar GoogleAnalytics = /*#__PURE__*/function () {\n  function GoogleAnalytics() {\n    GoogleAnalitics_classCallCheck(this, GoogleAnalytics);\n    GoogleAnalitics_classPrivateFieldInitSpec(this, _hostings, {\n      writable: true,\n      value: {\n        netlify: {\n          trackingId: \'G-DF7KP8HJ0W\'\n        },\n        vercel: {\n          trackingId: \'G-FTV8XC9XHN\'\n        },\n        surge: {\n          trackingId: \'G-P7RCCC94R2\'\n        }\n      }\n    });\n    this.getScript();\n  }\n  GoogleAnalitics_createClass(GoogleAnalytics, [{\n    key: "getDomen",\n    value: function getDomen() {\n      return location.hostname.split(\'.\')[1];\n    }\n  }, {\n    key: "getTrackingId",\n    value: function getTrackingId() {\n      var hostingOptions = GoogleAnalitics_classPrivateFieldGet(this, _hostings)[this.getDomen()];\n      if (hostingOptions) {\n        return hostingOptions.trackingId;\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: "getScript1",\n    value: function getScript1(trackingId) {\n      var script = document.createElement(\'script\');\n      script.src = "https://www.googletagmanager.com/gtag/js?id=".concat(trackingId);\n      return script;\n    }\n  }, {\n    key: "getScript2",\n    value: function getScript2(trackingId) {\n      var script = document.createElement("script");\n      script.textContent = "\\n            window.dataLayer = window.dataLayer || [];\\n            function gtag(){dataLayer.push(arguments);}\\n            gtag(\'js\', new Date());\\n            gtag(\'config\', \'".concat(trackingId, "\');\\n        ");\n      return script;\n    }\n  }, {\n    key: "getScript",\n    value: function getScript() {\n      var trackingId = this.getTrackingId();\n      if (trackingId) {\n        document.head.insertAdjacentElement("beforeend", this.getScript1(trackingId));\n        document.head.insertAdjacentElement("beforeend", this.getScript2(trackingId));\n      }\n    }\n  }]);\n  return GoogleAnalytics;\n}();\n\n;\n;// CONCATENATED MODULE: ./js/main.js\n\n\n\n\n\nnew GoogleAnalytics();\nnew InitialHtml();\nvar main_board = document.getElementById(\'board\');\nvar score = document.getElementById(\'attemptNumber\');\nvar fail = document.getElementById(\'failCount\');\nvar startGameButton = document.getElementById(\'startGame\');\nvar rememberFieldButton = document.getElementById(\'rememberField\');\nvar gameManager = new GameManager(main_board, score, fail);\ngameManager.startGame();\nvar intervalIdForCountdown;\nvar clickCard = function clickCard(event) {\n  var clickedCard = event.target.connectedCard;\n  if (clickedCard) {\n    gameManager.selectCard(clickedCard);\n    if (!rememberFieldButton.hasAttribute(\'disabled\')) {\n      setButtonForFlipAllCardsIsDisabled();\n      rememberFieldButton.removeEventListener(\'click\', openCards);\n    }\n  }\n};\nmain_board.addEventListener(\'click\', clickCard);\nstartGameButton.addEventListener(\'click\', function () {\n  clearInterval(intervalIdForCountdown);\n  gameManager.startGame();\n  main_board.addEventListener(\'click\', clickCard);\n  setButtonForFlipAllCardsIsAbled();\n});\nvar setButtonForFlipAllCardsIsDisabled = function setButtonForFlipAllCardsIsDisabled() {\n  rememberFieldButton.innerHTML = \'Недоступно\';\n  rememberFieldButton.style.cursor = \'default\';\n  rememberFieldButton.disabled = \'true\';\n};\nvar setButtonForFlipAllCardsIsAbled = function setButtonForFlipAllCardsIsAbled() {\n  rememberFieldButton.innerHTML = \'Запомнить\';\n  rememberFieldButton.style.cursor = \'pointer\';\n  rememberFieldButton.removeAttribute(\'disabled\');\n  rememberFieldButton.removeEventListener(\'click\', closeCards);\n  rememberFieldButton.addEventListener(\'click\', openCards);\n};\nvar flipAllCards = function flipAllCards() {\n  for (var i = 0; i < main_board.childNodes.length; i++) {\n    if (main_board.childNodes[i].connectedCard) {\n      main_board.childNodes[i].connectedCard.flipCard();\n    }\n  }\n};\nvar closeCards = function closeCards() {\n  clearInterval(intervalIdForCountdown);\n  flipAllCards();\n  rememberFieldButton.removeEventListener(\'click\', closeCards);\n  setButtonForFlipAllCardsIsDisabled();\n  main_board.addEventListener(\'click\', clickCard);\n};\nvar openCards = function openCards() {\n  main_board.removeEventListener(\'click\', clickCard);\n  flipAllCards();\n  rememberFieldButton.removeEventListener(\'click\', openCards);\n  rememberFieldButton.addEventListener(\'click\', closeCards);\n  var count = 10;\n  rememberFieldButton.innerHTML = "\\u0421\\u043A\\u0440\\u044B\\u0442\\u044C ".concat(count.toFixed(2));\n  var interval = 0.01;\n  intervalIdForCountdown = setInterval(function () {\n    count = count - interval;\n    rememberFieldButton.innerHTML = "\\u0421\\u043A\\u0440\\u044B\\u0442\\u044C ".concat(count.toFixed(2));\n    if (count <= 0) {\n      closeCards();\n    }\n  }, interval * 1000);\n};\nrememberFieldButton.addEventListener(\'click\', openCards);\n\n//* Register a service-worker:\nregister();\npwaStatus();\n\n//# sourceURL=webpack:///./js/main.js_+_9_modules?')}},__webpack_exports__={};__webpack_modules__[198]()})();